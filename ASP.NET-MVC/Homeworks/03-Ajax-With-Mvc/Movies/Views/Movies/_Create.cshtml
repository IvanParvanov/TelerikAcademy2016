@model Movies.Models.Movie

<button type="button" class="btn btn-primary" data-toggle="collapse" data-target="#createModal">
    Create new
</button>
<div class="collapse well col-md-4" id="createModal">
    @using (Ajax.BeginForm("Create", new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "mainContent", OnSuccess = "initDatepickers()" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal text-center">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control center" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Director, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Director, new { htmlAttributes = new { @class = "form-control center" } })
                @Html.ValidationMessageFor(model => model.Director, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control datefield center" } })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LeadMale, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.LeadMale, new { htmlAttributes = new { @class = "form-control center" } })
                @Html.ValidationMessageFor(model => model.LeadMale, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LeadFemale, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.LeadFemale, new { htmlAttributes = new { @class = "form-control center" } })
                @Html.ValidationMessageFor(model => model.LeadFemale, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Studio, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Studio, new { htmlAttributes = new { @class = "form-control center " } })
                @Html.ValidationMessageFor(model => model.Studio, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StudioAddress, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.StudioAddress, new { htmlAttributes = new { @class = "form-control center" } })
                @Html.ValidationMessageFor(model => model.StudioAddress, "", new { @class = "text-danger" })
            </div>
            <div class="modal-footer">
                <input type="submit" value="Create" class="btn btn-success"/>
                <button type="button" class="btn btn-inverse" data-toggle="collapse" data-target="#createModal">
                    Close
                </button>
            </div>
        </div>
    }
</div>